include:
  - local: "api/.gitlab-ci/helm.yml"

.api-base:
  variables:
    MODULE_NAME: api
    MODULE_PATH: ${MODULE_NAME}
    NEXUS_MAVEN_IMAGE_NAME: ${NEXUS_DOCKER_REGISTRY}/library/adoptopenjdk:11-jre-hotspot

.api_init_vars: &api_init_vars |
  export GITLAB_IMAGE_PULL_SECRET_NAME=${IMAGE_PULL_SECRET_PREFIX}-${MODULE_NAME}
  export POSTGRES_IMAGE_NAME=${REGISTRY_BASE_NAME}/postgres:${IMAGE_TAG_NAME}
  export BASE_POSTGRES_IMAGE_NAME=${NEXUS_POSTGRES_IMAGE_NAME}
  export API_IMAGE_NAME=${REGISTRY_BASE_NAME}/api:${IMAGE_TAG_NAME}
  export BASE_API_IMAGE_NAME=${NEXUS_MAVEN_IMAGE_NAME}
  export MODULE_NAME=$MODULE_NAME
  export MODULE_PATH=$MODULE_PATH
  echo "REQUEST_RELAY_FQDN=$REQUEST_RELAY_FQDN"
  VERSION=`cat pom.xml | grep "<groupId>com.gateway</groupId>" -C 3 | grep -E  "<version>.*</version>" -o | head -1 | sed -E "s/<version>(.*)<\/version>/\1/g" | sed -E "s/-SNAPSHOT/-${BRANCH_NAME}-SNAPSHOT/g"`

.api-build: &api-build |
  set -x
  echo "VERSION=$VERSION"
  #envsubst < settings.xml
  if [ ! -z $NEW_RELEASE_VERSION ]
  then
    mvn  --batch-mode -s settings.xml versions:set -DprocessAllModules -DgenerateBackupPoms=false -DnewVersion=$NEW_RELEASE_VERSION
  fi
  cd api
  echo "MODULE_PATH=$MODULE_PATH"
  echo "MODULE_NAME=$MODULE_NAME"
 
  mvn clean install --batch-mode -q -s ../settings.xml -DskipTests -Dlogging.level.org.springframework=INFO -Dlogging.level.com.gateway=INFO
  echo "listage des elements dans `pwd`target" 
  ls target

api_build:
  extends:
    - .api-base
    - .build-job
    - .no-needs
    - .envsubst
  environment:
    name: ${CI_BUILD_REF_SLUG}/api
  script:
    - *api_init_vars
    - *api-build
  artifacts:
    paths:
      - api/target
  needs: [ "deploy-nexus", "check-if-release-version" ]

api_image_build:
  extends:
    - .image-job
    - .api-base
  environment:
    name: image/${CI_BUILD_REF_SLUG}/api
  script:
    - *api_init_vars
    - |
      cp ../delivery/commons/lib/elastic-apm-agent-1.35.0.jar .
      image
  needs: [ "api_build", "check-if-release-version" ]

api_preview_deploy:
  extends:
    - .preview-deploy-job
    - .api-base
    - .deactivate
  script:
    - *api_init_vars
    - |
      export MAAS_API_CACHE_KEYS_PREFIX="preview"
      deploy
  needs: [ "api_image_build", "check-if-release-version" ]
  environment:
    on_stop: api_preview_cleanup


api_preview_cleanup:
  extends:
    - .preview-undeploy-job
    - .api-base
  script:
    - |
      undeploy
      
      #TODO artifact entre ressource.yml deploiement et undeploy