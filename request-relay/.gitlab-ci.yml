include:
  - local: "request-relay/.gitlab-ci/helm.yml"

.request-relay-base:
  variables:
    MODULE_NAME: request-relay
    MODULE_PATH: ${MODULE_NAME}
    NEXUS_MAVEN_IMAGE_NAME: ${NEXUS_DOCKER_REGISTRY}/adoptopenjdk:11-jre-hotspot


.request_relay_init_vars: &request_relay_init_vars |
  export GITLAB_IMAGE_PULL_SECRET_NAME=${IMAGE_PULL_SECRET_PREFIX}-${MODULE_NAME}
  export REQUEST_RELAY_IMAGE_NAME=${REGISTRY_BASE_NAME}/request-relay:${IMAGE_TAG_NAME}
  export BASE_REQUEST_RELAY_IMAGE_NAME=${NEXUS_MAVEN_IMAGE_NAME}
  export MODULE_NAME=$MODULE_NAME
  export VERSION=`cat pom.xml | grep "<groupId>com.gateway</groupId>" -C 3 | grep -E  "<version>.*</version>" -o | head -1 | sed -E "s/<version>(.*)<\/version>/\1/g" | sed -E "s/-SNAPSHOT/-${BRANCH_NAME}-SNAPSHOT/g"`

.request-relay-build: &request-relay-build |
  set -x
  envsubst < settings.xml
  # if release version we change pom version with the new version
  if [ ! -z $NEW_RELEASE_VERSION ]
  then
    mvn  --batch-mode -s settings.xml versions:set -DprocessAllModules -DgenerateBackupPoms=false -DnewVersion=$NEW_RELEASE_VERSION
  fi
  cd request-relay
  envsubst < ../settings.xml
  mvn clean install -s ../settings.xml -DskipTests -Dlogging.level.org.springframework=INFO -Dlogging.level.com.gateway=INFO

request_relay_build:
  extends:
    - .request-relay-base
    - .build-job
    - .no-needs
    - .envsubst
  environment:
    name: ${CI_BUILD_REF_SLUG}/request-relay
  script:
    - *request_relay_init_vars
    - *request-relay-build
  artifacts:
    paths:
      - request-relay/target
  needs: [ "deploy-nexus", "check-if-release-version" ]

request_relay_image_build:
  extends:
    - .request-relay-base
    - .image-job
#    - .except-clean
  environment:
    name: image/${CI_BUILD_REF_SLUG}/request-relay
  script:
    - *request_relay_init_vars
    - |
      cd request-relay
      pwd
      cp ../delivery/commons/lib/elastic-apm-agent-1.35.0.jar .
      image
  needs: [ "request_relay_build" , "check-if-release-version" ]


request_relay_preview_deploy:
  extends:
    - .preview-deploy-job
    - .request-relay-base
  script:
    - *request_relay_init_vars
    - |
      set -x
      echo " --------- Deploiement en cours ... ---------"
      deploy
  needs: [ "request_relay_image_build" , "check-if-release-version" ]
  environment:
    on_stop: request_relay_preview_cleanup


request_relay_preview_cleanup:
  extends:
    - .preview-undeploy-job
    - .request-relay-base
  script:
    - |
      undeploy
      
      #TODO artifact entre ressource.yml deploiement et undeploy