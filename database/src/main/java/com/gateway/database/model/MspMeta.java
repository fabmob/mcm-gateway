package com.gateway.database.model;

import java.util.Set;
import java.util.UUID;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * MspMeta generated by hbm2java
 */
@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "msp_meta", schema = "msp")
public class MspMeta implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue
	@Column(name = "msp_id", unique = true, nullable = false)
	private UUID mspId;
	@Column(name = "name", length = 50, nullable = false)
	private String name;
	@Column(name = "operator", length = 50)
	private String operator;
	@Column(name = "type", length = 20)
	private String type;
	@Column(name = "url", length = 200)
	private String url;
	@Column(name = "url_webview")
	private Boolean urlWebview;
	@Column(name = "logo_url", length = 200)
	private String logoUrl;
	@Column(name = "logo_format", length = 4)
	private String logoFormat;
	@Column(name = "primary_color", length = 10)
	private String primaryColor;
	@Column(name = "secondary_color", length = 10)
	private String secondaryColor;

	@OneToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	private PriceList priceList;

	@Column(name = "is_enabled")
	private Boolean isEnabled;
	@Column(name = "has_vehicule")
	private Boolean hasVehicle;
	@Column(name = "has_station")
	private Boolean hasStation;
	@Column(name = "has_station_status")
	private Boolean hasStationStatus;
	@Column(name = "has_operating_zone")
	private Boolean hasOperatingZone;
	@Column(name = "has_no_parking_zone")
	private Boolean hasNoParkingZone;
	@Column(name = "has_pref_parking_zone")
	private Boolean hasPrefParkingZone;
	@Column(name = "has_speed_limit_zone")
	private Boolean hasSpeedLimitZone;
	@Column(name = "has_parking")
	private Boolean hasParking;
	@Column(name = "has_hold")
	private Boolean hasHold;

	@OneToOne(fetch = FetchType.EAGER,mappedBy = "msp",cascade = CascadeType.REMOVE)
	private Token token;
	
	@OneToMany(mappedBy = "id.msp",cascade = CascadeType.REMOVE)
	private Set<MspStandard> standard;

}
